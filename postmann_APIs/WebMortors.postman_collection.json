{
	"info": {
		"_postman_id": "dae59e5b-d2ec-4b2a-b9fc-714b221e78ff",
		"name": "WebMortors",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "OnlineChallenge",
			"item": [
				{
					"name": "Brands registered at webmotors",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const expectedResponse =\r",
									"    [\r",
									"        {\r",
									"            \"ID\": 1,\r",
									"            \"Name\": \"Chevrolet\"\r",
									"        },\r",
									"        {\r",
									"            \"ID\": 2,\r",
									"            \"Name\": \"Honda\"\r",
									"        },\r",
									"        {\r",
									"            \"ID\": 3,\r",
									"            \"Name\": \"Ford\"\r",
									"        }\r",
									"    ];\r",
									"\r",
									"const Schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"array\",\r",
									"    \"default\": [],\r",
									"    \"examples\": [\r",
									"        [\r",
									"            {\r",
									"                \"ID\": 1,\r",
									"                \"Name\": \"Chevrolet\"\r",
									"            },\r",
									"            {\r",
									"                \"ID\": 2,\r",
									"                \"Name\": \"Honda\"\r",
									"            }\r",
									"        ]\r",
									"    ],\r",
									"    \"uniqueItems\": false,\r",
									"    \"additionalItems\": true,\r",
									"    \"items\": {\r",
									"        \"$id\": \"#/items\",\r",
									"        \"anyOf\": [\r",
									"            {\r",
									"                \"$id\": \"#/items/anyOf/0\",\r",
									"                \"type\": \"object\",\r",
									"                \"default\": {},\r",
									"                \"examples\": [\r",
									"                    {\r",
									"                        \"ID\": 1,\r",
									"                        \"Name\": \"Chevrolet\"\r",
									"                    }\r",
									"                ],\r",
									"                \"required\": [\r",
									"                    \"ID\",\r",
									"                    \"Name\"\r",
									"                ],\r",
									"                \"properties\": {\r",
									"                    \"ID\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/ID\",\r",
									"                        \"type\": \"integer\",\r",
									"                        \"default\": 0,\r",
									"                        \"examples\": [\r",
									"                            1\r",
									"                        ]\r",
									"                    },\r",
									"                    \"Name\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/Name\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"Chevrolet\"\r",
									"                        ]\r",
									"                    }\r",
									"                },\r",
									"                \"additionalProperties\": true\r",
									"            }\r",
									"        ]\r",
									"    }\r",
									"}\r",
									"pm.variables.set(\"expectedResponseFromApiMake\", expectedResponse);\r",
									"pm.variables.set(\"expectedSchema\", Schema);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"jsonData\", pm.response.json);\r",
									"const responseJson = pm.response.json();\r",
									"const expectedResponse = pm.variables.get(\"expectedResponseFromApiMake\");\r",
									"const expectedSchema = pm.variables.get(\"expectedSchema\");\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Check Array Size', function (){\r",
									"    pm.expect(responseJson.length).to.eql(3);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Body Not Null\", function (){\r",
									"    pm.expect(responseJson).not.to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test('Check if objects are equal', function () {\r",
									" pm.expect(expectedResponse).to.eql(responseJson);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid json\", function () {\r",
									"  pm.response.to.be.withBody;    // contain valid body \r",
									"  pm.response.to.be.json;        //  JSON valid file\r",
									"  pm.response.to.be.not.empty;   //body no empty\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/OnlineChallenge/Make",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"OnlineChallenge",
								"Make"
							]
						}
					},
					"response": [
						{
							"name": "Brands registered at webmotors",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/OnlineChallenge/Make",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"OnlineChallenge",
										"Make"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Mar 2022 15:22:15 GMT"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Content-Length",
									"value": "76"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"ID\": 1,\n        \"Name\": \"Chevrolet\"\n    },\n    {\n        \"ID\": 2,\n        \"Name\": \"Honda\"\n    },\n    {\n        \"ID\": 3,\n        \"Name\": \"Ford\"\n    }\n]"
						}
					]
				},
				{
					"name": "Retrieve registered models on webmotors",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const expectedResponse = [];\r",
									"\r",
									"pm.variables.set(\"random_number\", _.random(1, 3))\r",
									"pm.variables.set(\"expectedResponse\", expectedResponse);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"const MakeID = pm.variables.get(\"MakeID\");\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Body Not Null\", function (){\r",
									"    pm.expect(responseJson[1]).MakeID.to.eql([MakeID]);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid json\", function () {\r",
									"  pm.response.to.be.withBody;    // contain valid body \r",
									"  pm.response.to.be.json;        //  JSON valid file\r",
									"  pm.response.to.be.not.empty;   //body no empty\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/OnlineChallenge/Model?MakeID={{random_number}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"OnlineChallenge",
								"Model"
							],
							"query": [
								{
									"key": "MakeID",
									"value": "{{random_number}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Retrieve registered models on webmotors",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/OnlineChallenge/Model?MakeID={{random_number}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"OnlineChallenge",
										"Model"
									],
									"query": [
										{
											"key": "MakeID",
											"value": "{{random_number}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Mar 2022 15:25:13 GMT"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "SERVER",
									"value": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "Content-Length",
									"value": "101"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"MakeID\": 2,\n        \"ID\": 4,\n        \"Name\": \"City\"\n    },\n    {\n        \"MakeID\": 2,\n        \"ID\": 5,\n        \"Name\": \"CRV\"\n    },\n    {\n        \"MakeID\": 2,\n        \"ID\": 6,\n        \"Name\": \"Fit\"\n    }\n]"
						}
					]
				},
				{
					"name": "Recover versions registered on webmotors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"const ModelID = pm.variables.get(\"ModelID\");\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Body Not Null\", function (){\r",
									"    pm.expect(responseJson[1].ModelID).to.eql(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid json\", function () {\r",
									"  pm.response.to.be.withBody;    // contain valid body \r",
									"  pm.response.to.be.json;        //  JSON valid file\r",
									"  pm.response.to.be.not.empty;   //body no empty\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const expectedResponse = [];\r",
									"\r",
									"pm.variables.set(\"random_number\", _.random(1, 7))\r",
									"pm.variables.set(\"expectedResponse\", expectedResponse);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/OnlineChallenge/Version?ModelID={{random_number}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"OnlineChallenge",
								"Version"
							],
							"query": [
								{
									"key": "ModelID",
									"value": "{{random_number}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Recover versions registered on webmotors",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/OnlineChallenge/Version?ModelID={{random_number}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"OnlineChallenge",
										"Version"
									],
									"query": [
										{
											"key": "ModelID",
											"value": "{{random_number}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Mar 2022 15:27:07 GMT"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "SERVER",
									"value": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "Content-Length",
									"value": "270"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"ModelID\": 2,\n        \"ID\": 12,\n        \"Name\": \"1.5 LX 16V FLEX 4P MANUAL\"\n    },\n    {\n        \"ModelID\": 2,\n        \"ID\": 13,\n        \"Name\": \"2.0 EXL 4X4 16V GASOLINA 4P AUTOMÁTICO\"\n    },\n    {\n        \"ModelID\": 2,\n        \"ID\": 14,\n        \"Name\": \"1.8 16V EVO FLEX FREEDOM OPEN EDITION AUTOMÁTICO\"\n    },\n    {\n        \"ModelID\": 2,\n        \"ID\": 15,\n        \"Name\": \"1.0 MPI EL 8V FLEX 4P MANUAL\"\n    }\n]"
						}
					]
				},
				{
					"name": "recover versions registered on webmotors",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const expectedResponse = [];\r",
									"\r",
									"pm.variables.set(\"random_number\", _.random(1, 3))\r",
									"pm.variables.set(\"expectedResponse\", expectedResponse);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Body Not Null\", function (){\r",
									"    pm.expect(responseJson).to.eql([]);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid json\", function () {\r",
									"  pm.response.to.be.withBody;    // contain valid body \r",
									"  pm.response.to.be.json;        //  JSON valid file\r",
									"  pm.response.to.be.not.empty;   //body no empty\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/OnlineChallenge/Vehicles?Page={{random_number}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"OnlineChallenge",
								"Vehicles"
							],
							"query": [
								{
									"key": "Page",
									"value": "{{random_number}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "recover versions registered on webmotors",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/OnlineChallenge/Vehicles?Page={{random_number}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"OnlineChallenge",
										"Vehicles"
									],
									"query": [
										{
											"key": "Page",
											"value": "{{random_number}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Mar 2022 15:37:40 GMT"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "SERVER",
									"value": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "Content-Length",
									"value": "2322"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"ID\": 1,\n        \"Make\": \"Honda\",\n        \"Model\": \"City\",\n        \"Version\": \"2.0 EXL 4X4 16V GASOLINA 4P AUTOMÁTICO\",\n        \"Image\": \"http://desafioonline.webmotors.com.br/content/img/01.jpg\",\n        \"KM\": 0,\n        \"Price\": \"59000,00\",\n        \"YearModel\": 2018,\n        \"YearFab\": 2017,\n        \"Color\": \"Azul\"\n    },\n    {\n        \"ID\": 2,\n        \"Make\": \"Mitsubishi\",\n        \"Model\": \"Lancer\",\n        \"Version\": \"2.0 EVO 4P AUTOMÁTICO\",\n        \"Image\": \"http://desafioonline.webmotors.com.br/content/img/02.jpg\",\n        \"KM\": 47500,\n        \"Price\": \"49000,00\",\n        \"YearModel\": 2012,\n        \"YearFab\": 2012,\n        \"Color\": \"Branco\"\n    },\n    {\n        \"ID\": 3,\n        \"Make\": \"Honda\",\n        \"Model\": \"Fit\",\n        \"Version\": \"1.4 LXL 16V FLEX 4P AUTOMÁTICO\",\n        \"Image\": \"http://desafioonline.webmotors.com.br/content/img/03.jpg\",\n        \"KM\": 0,\n        \"Price\": \"78000,00\",\n        \"YearModel\": 2018,\n        \"YearFab\": 2018,\n        \"Color\": \"Preto\"\n    },\n    {\n        \"ID\": 4,\n        \"Make\": \"Mitsubishi\",\n        \"Model\": \"Lancer\",\n        \"Version\": \"2.0 EVO 4P AUTOMÁTICO\",\n        \"Image\": \"http://desafioonline.webmotors.com.br/content/img/04.jpg\",\n        \"KM\": 12900,\n        \"Price\": \"59000,00\",\n        \"YearModel\": 2016,\n        \"YearFab\": 2015,\n        \"Color\": \"Vermelho\"\n    },\n    {\n        \"ID\": 5,\n        \"Make\": \"Honda\",\n        \"Model\": \"Fit\",\n        \"Version\": \"1.4 LXL 16V FLEX 4P AUTOMÁTICO\",\n        \"Image\": \"http://desafioonline.webmotors.com.br/content/img/05.jpg\",\n        \"KM\": 12000,\n        \"Price\": \"55000,00\",\n        \"YearModel\": 2016,\n        \"YearFab\": 2016,\n        \"Color\": \"Azul\"\n    },\n    {\n        \"ID\": 6,\n        \"Make\": \"Chevrolet\",\n        \"Model\": \"Agile\",\n        \"Version\": \"1.4 MPFI EFFECT 8V FLEX 4P AUTOMATIZADO\",\n        \"Image\": \"http://desafioonline.webmotors.com.br/content/img/06.jpg\",\n        \"KM\": 12000,\n        \"Price\": \"37000,00\",\n        \"YearModel\": 2014,\n        \"YearFab\": 2013,\n        \"Color\": \"Vermelho\"\n    },\n    {\n        \"ID\": 7,\n        \"Make\": \"Chevrolet\",\n        \"Model\": \"Agile\",\n        \"Version\": \"1.4 MPFI EFFECT 8V FLEX 4P AUTOMATIZADO\",\n        \"Image\": \"http://desafioonline.webmotors.com.br/content/img/07.jpg\",\n        \"KM\": 0,\n        \"Price\": \"45000,00\",\n        \"YearModel\": 2018,\n        \"YearFab\": 2017,\n        \"Color\": \"Cinza\"\n    },\n    {\n        \"ID\": 8,\n        \"Make\": \"Ford\",\n        \"Model\": \"Ecosport\",\n        \"Version\": \"1.6 FREESTYLE 16V FLEX 4P MANUAL\",\n        \"Image\": \"http://desafioonline.webmotors.com.br/content/img/08.jpg\",\n        \"KM\": 93000,\n        \"Price\": \"45000,00\",\n        \"YearModel\": 2013,\n        \"YearFab\": 2012,\n        \"Color\": \"Branca\"\n    },\n    {\n        \"ID\": 9,\n        \"Make\": \"Chevrolet\",\n        \"Model\": \"Agile\",\n        \"Version\": \"1.4 MPFI EFFECT 8V FLEX 4P AUTOMATIZADO\",\n        \"Image\": \"http://desafioonline.webmotors.com.br/content/img/06.jpg\",\n        \"KM\": 12000,\n        \"Price\": \"37000,00\",\n        \"YearModel\": 2014,\n        \"YearFab\": 2013,\n        \"Color\": \"Vermelho\"\n    },\n    {\n        \"ID\": 10,\n        \"Make\": \"Honda\",\n        \"Model\": \"Fit\",\n        \"Version\": \"1.4 LXL 16V FLEX 4P AUTOMÁTICO\",\n        \"Image\": \"http://desafioonline.webmotors.com.br/content/img/05.jpg\",\n        \"KM\": 12000,\n        \"Price\": \"55000,00\",\n        \"YearModel\": 2016,\n        \"YearFab\": 2016,\n        \"Color\": \"Azul\"\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "OnlineChallenge 400 - Bad Request",
			"item": [
				{
					"name": "Retrieve registered models on webmotors Status 400",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const expectedResponse = [];\r",
									"\r",
									"pm.variables.set(\"random_number\", _.random(1, 3))\r",
									"pm.variables.set(\"expectedResponse\", expectedResponse);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 - Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"The request is invalid.\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Message\");\r",
									"});\r",
									"\r",
									"pm.test(\"The parameters dictionary contains a null entry for parameter 'MakeID' of non-nullable type 'System.Int32' for method 'System.Collections.Generic.List`1[Swagger.Models.Model] Model(Int32)' in 'Swagger.Controllers.OnlineChallengeController'. An optional parameter must be a reference type, a nullable type, or be declared as an optional parameter.\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"MessageDetail\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/OnlineChallenge/Model?MakeID=all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"OnlineChallenge",
								"Model"
							],
							"query": [
								{
									"key": "MakeID",
									"value": "all"
								}
							]
						}
					},
					"response": [
						{
							"name": "Retrieve registered models on webmotors Status 400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/OnlineChallenge/Model?MakeID=all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"OnlineChallenge",
										"Model"
									],
									"query": [
										{
											"key": "MakeID",
											"value": "all"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Mar 2022 15:37:50 GMT"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "SERVER",
									"value": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "Content-Length",
									"value": "402"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"Message\": \"The request is invalid.\",\n    \"MessageDetail\": \"The parameters dictionary contains a null entry for parameter 'MakeID' of non-nullable type 'System.Int32' for method 'System.Collections.Generic.List`1[Swagger.Models.Model] Model(Int32)' in 'Swagger.Controllers.OnlineChallengeController'. An optional parameter must be a reference type, a nullable type, or be declared as an optional parameter.\"\n}"
						}
					]
				},
				{
					"name": "Recover versions registered on webmotors Status 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 - Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"The request is invalid.\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Message\");\r",
									"});\r",
									"\r",
									"pm.test(\"The parameters dictionary contains a null entry for parameter 'MakeID' of non-nullable type 'System.Int32' for method 'System.Collections.Generic.List`1[Swagger.Models.Model] Model(Int32)' in 'Swagger.Controllers.OnlineChallengeController'. An optional parameter must be a reference type, a nullable type, or be declared as an optional parameter.\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"MessageDetail\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/OnlineChallenge/Version?ModelID=all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"OnlineChallenge",
								"Version"
							],
							"query": [
								{
									"key": "ModelID",
									"value": "all"
								}
							]
						}
					},
					"response": [
						{
							"name": "Recover versions registered on webmotors Status 400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/OnlineChallenge/Version?ModelID=all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"OnlineChallenge",
										"Version"
									],
									"query": [
										{
											"key": "ModelID",
											"value": "all"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Mar 2022 15:37:54 GMT"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Content-Length",
									"value": "407"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"Message\": \"The request is invalid.\",\n    \"MessageDetail\": \"The parameters dictionary contains a null entry for parameter 'ModelID' of non-nullable type 'System.Int32' for method 'System.Collections.Generic.List`1[Swagger.Models.Version] Version(Int32)' in 'Swagger.Controllers.OnlineChallengeController'. An optional parameter must be a reference type, a nullable type, or be declared as an optional parameter.\"\n}"
						}
					]
				},
				{
					"name": "recover versions registered on webmotors Status 400",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 - Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"The request is invalid.\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Message\");\r",
									"});\r",
									"\r",
									"pm.test(\"The parameters dictionary contains a null entry for parameter 'MakeID' of non-nullable type 'System.Int32' for method 'System.Collections.Generic.List`1[Swagger.Models.Model] Model(Int32)' in 'Swagger.Controllers.OnlineChallengeController'. An optional parameter must be a reference type, a nullable type, or be declared as an optional parameter.\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"MessageDetail\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/OnlineChallenge/Vehicles?Page=all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"OnlineChallenge",
								"Vehicles"
							],
							"query": [
								{
									"key": "Page",
									"value": "all"
								}
							]
						}
					},
					"response": [
						{
							"name": "recover versions registered on webmotors Status 400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/OnlineChallenge/Vehicles?Page=all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"OnlineChallenge",
										"Vehicles"
									],
									"query": [
										{
											"key": "Page",
											"value": "all"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Mar 2022 15:38:05 GMT"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "SERVER",
									"value": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "Content-Length",
									"value": "404"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"Message\": \"The request is invalid.\",\n    \"MessageDetail\": \"The parameters dictionary contains a null entry for parameter 'Page' of non-nullable type 'System.Int32' for method 'System.Collections.Generic.List`1[Swagger.Models.Vehicle] Vehicle(Int32)' in 'Swagger.Controllers.OnlineChallengeController'. An optional parameter must be a reference type, a nullable type, or be declared as an optional parameter.\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Values",
			"item": [
				{
					"name": "Values Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Body Not Null\", function (){\r",
									"    pm.expect(responseJson).to.eql([]);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid json\", function () {\r",
									"  pm.response.to.be.withBody;    // contain valid body \r",
									"  pm.response.to.be.json;        //  JSON valid file\r",
									"  pm.response.to.be.not.empty;   //body no empty\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Values",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Values"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Values"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"adipisicing cillum Lorem\",\n  \"e\"\n]"
						},
						{
							"name": "Values Get",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Values"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Mar 2022 15:38:15 GMT"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "SERVER",
									"value": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "Content-Length",
									"value": "19"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    \"value1\",\n    \"value2\"\n]"
						}
					]
				},
				{
					"name": "Values Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"value1\",\r\n  \"value2\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Values",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Values"
							]
						}
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Values"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Values Post",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value1\",\r\n  \"value2\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Values"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Mar 2022 15:38:27 GMT"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "SERVER",
									"value": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Values Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Body Not Null\", function (){\r",
									"    pm.expect(responseJson).to.eql([]);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid json\", function () {\r",
									"  pm.response.to.be.withBody;    // contain valid body \r",
									"  pm.response.to.be.json;        //  JSON valid file\r",
									"  pm.response.to.be.not.empty;   //body no empty\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/Values/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Values",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Values/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Values",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45340277",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"id\""
						},
						{
							"name": "Values Get",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Values/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Values",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Mar 2022 15:38:35 GMT"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "SERVER",
									"value": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "Content-Length",
									"value": "7"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "\"value\""
						}
					]
				},
				{
					"name": "Values Put",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "0",
									"value": "i"
								},
								{
									"key": "1",
									"value": "d"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/Values/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Values",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-45340277",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Values/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Values",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45340277",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Values Put",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "0",
											"value": "i"
										},
										{
											"key": "1",
											"value": "d"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Values/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Values",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45340277",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS, TRACE"
								},
								{
									"key": "Content-Type",
									"value": "text/html"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Mar 2022 15:38:41 GMT"
								},
								{
									"key": "SERVER",
									"value": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "Content-Length",
									"value": "101"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "The page you are looking for cannot be displayed because an invalid method (HTTP verb) is being used."
						}
					]
				},
				{
					"name": "Values Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/Values/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Values",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Values/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Values",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45340277",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Values Delete",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Values/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Values",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS, TRACE"
								},
								{
									"key": "Content-Type",
									"value": "text/html"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Mar 2022 15:38:49 GMT"
								},
								{
									"key": "SERVER",
									"value": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "Content-Length",
									"value": "101"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "The page you are looking for cannot be displayed because an invalid method (HTTP verb) is being used."
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "jsonData",
			"value": ""
		}
	]
}